#!/bin/bash -le
#
# LIGO daily summary page script
#
# Author: Duncan Macleod <duncan.macleod@ligo.org>
#
# A pipeline is generated using the gw_summary_pipe DAG generator
# before this DAG is submitted to the condor job scheduler
#
# Note: customized for the 40m by Max Isi (Jul 16, 2015)

echo "-- Welcome to the gw_summary DAG generator -----------------------------------"

# get basic environment
DIR=$( cd "$( dirname $(readlink -f "${BASH_SOURCE[0]}" ) )" && pwd )
. ~/.bash_profile
echo -n "Profile set, "
. $DIR/functions
echo "environment set, let's go."

echo "Identified summary job as \"${_SUMMARY_JOB}\""

# catch command line options
_SUMMARY_ARGUMENTS="$@"

# move to output directory
mkdir -p ${_SUMMARY_OUT}
cd ${_SUMMARY_OUT}
echo "Moved to output directory ${_SUMMARY_OUT}"

# -- set environment ----------------------------
IFO="C1"
set_site_environment
activate_gwpysoft
echo "Entered virtualenv from ${VIRTUAL_ENV}"
if command -v icc 1>/dev/null && [ -f ${GWPYSOFT_MKL_BASE}/etc/gwpy-user-env.sh ]; then
    activate_mkl_numpy_scipy && echo "Activated MKL-compiled numpy/scipy"
fi
echo "Environment set"

# -- update config files -------------------
update_40m_config
update_40m_medm
echo "Pulled from 40m"

# -- set kerberos environment -------------------
klist -s &>/dev/null || get_robot_kerberos_ticket
check_kerberos_ticket || exit $?
echo "Kerberos ticket verified"

# -- parse arguments ----------------------------
# parse arguments with defaults
if [[ "${_SUMMARY_ARGUMENTS}" == *"config-file"* ]]; then
    CONFIGURATIONS=""
else
    CONFIGURATIONS=`get_config-file_and_priority_args`
fi
NPROC=`parse_argument_default multi-process 8`
MAXJOBS=`parse_argument_default maxjobs 4`
CONDORCMD=`get_condor_arguments`
FILETAG=`parse_argument_default file-tag ${_SUMMARY_JOB}`

# set arguments
OPTIONS="
--verbose ${FILETAG} --archive --ifo ${IFO} --log-dir ${LOGDIR}
${CONFIGURATIONS} ${CONDORCMD} ${MAXJOBS} ${NPROC} --on-segdb-error warn --on-datafind-error warn"
ARGUMENTS=$(eval echo ${_SUMMARY_ARGUMENTS})

# clean up
TAG=${FILETAG#* } # removes "--file-tag" from FILETAG
if [ ! -f *.lock ]; then
    # clean previous DAGs
    {
    rm ${TAG}*.dag*
    echo "Removed old DAGs: ${TAG}*.dag*"
    } || {
    echo "No previous DAGs."
    }
    # clean previous logs
    {
    rm ${LOGDIR}/${TAG}*
    echo "Removed old logs: ${LOGDIR}/${TAG}*"
    } || {
    echo "No previous logs."
    }
fi

# run job and capture DAGMan process ID
_SUMMARY_CMD="gw_summary_pipe $OPTIONS $ARGUMENTS"
echo "Executing:"
echo "-------------------------------------------------------------------------------"
echo $_SUMMARY_CMD
echo "-------------------------------------------------------------------------------"
DAGFILE=$(basename `${_SUMMARY_CMD} | tail -n1`)
echo
echo "Dag generated as:"
echo
echo $DAGFILE
echo

# submit DAG
if [ -f ${DAGFILE}.lock ]; then
    echo "DAG lock file already exists, cannot submit now!" 1>&2
    exit 1
fi
sleep 5
condor_submit_dag -force ${DAGFILE}

# watch lock file and exit when the DAG is done
wait_for_dag_and_exit $DAGFILE || exit 1
